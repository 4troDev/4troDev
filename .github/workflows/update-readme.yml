name: üîÑ Update Committed Repos in README

on:
  schedule:
    - cron: '0 * * * *'  # Runs every hour
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Fetch Recent Commit Activity
        run: |
          set -e

          echo "üß™ Checking GitHub API rate limit..."
          RATE_LIMIT=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/rate_limit | jq '.rate.remaining')

          if [ "$RATE_LIMIT" -eq 0 ]; then
            echo "‚ùå GitHub API rate limit exceeded. Exiting."
            exit 1
          fi

          echo "üîÑ Fetching user repos..."
          REPOS_RAW=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/user/repos?per_page=100)

          if ! echo "$REPOS_RAW" | jq -e 'type == "array"' > /dev/null; then
            echo "‚ùå Invalid user repos response:"
            echo "$REPOS_RAW"
            exit 1
          fi

          REPOS=$(echo "$REPOS_RAW" | jq -r '.[] | select(.full_name != null) | .full_name')

          echo "üîÑ Fetching organization repos..."
          ORG_REPOS=""
          ORGS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/user/orgs | jq -r '.[].login')

          for ORG in $ORGS; do
            ORG_JSON=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              https://api.github.com/orgs/$ORG/repos?per_page=100)

            if echo "$ORG_JSON" | jq -e 'type == "array"' > /dev/null; then
              ORG_REPOS+=$(echo "$ORG_JSON" | jq -r '.[] | select(.full_name != null) | .full_name')$'\n'
            else
              echo "‚ö†Ô∏è Skipping $ORG due to invalid response"
            fi
          done

          ALL_REPOS=$(echo -e "$REPOS\n$ORG_REPOS" | sort | uniq)

          echo "üîç Looking for recent commits..."
          COMMITTED_REPOS=""
          for REPO in $ALL_REPOS; do
            COMMITS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/$REPO/commits?author=4troDev&since=$(date -u +%Y-%m-%dT00:00:00Z)" | \
              jq -r 'if type=="array" then .[].sha else empty end')

            if [ -n "$COMMITS" ]; then
              COMMITTED_REPOS+="- [$(basename $REPO)](https://github.com/$REPO)"$'\n'
            fi
          done

          if [ -z "$COMMITTED_REPOS" ]; then
            COMMITTED_REPOS="*No activity today.*"
          fi

          echo "üìù Updating README.md..."
          awk -v r="$COMMITTED_REPOS" '
            /<!-- CURRENTLY-WORKING-ON:START -->/ { print; print r; skip=1; next }
            /<!-- CURRENTLY-WORKING-ON:END -->/ { skip=0 }
            skip==0 { print }
          ' README.md > README.tmp && mv README.tmp README.md

      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
          message: "üîÑ Update committed repos in README"
