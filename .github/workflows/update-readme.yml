name: üîÑ Update Committed Repos in README

on:
  schedule:
    - cron: '0 * * * *'  # Every hour
  workflow_dispatch:

permissions:
  contents: write

env:
  AUTH_HEADER: "Authorization: Bearer ${{ secrets.PAT_TOKEN }}"

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Fetch Recent Commit Activity
        run: |
          set -e
          echo "üß™ Checking GitHub API rate limit..."
          RATE_LIMIT=$(curl -s -H "$AUTH_HEADER" https://api.github.com/rate_limit | jq '.rate.remaining')
          if [ "$RATE_LIMIT" -eq 0 ]; then
            echo "‚ùå GitHub API rate limit exceeded. Exiting."
            exit 1
          fi

          echo "üì• Fetching user repositories..."
          REPOS_JSON=$(curl -s -H "$AUTH_HEADER" https://api.github.com/user/repos?per_page=100)
          if ! echo "$REPOS_JSON" | jq -e 'type == "array"' > /dev/null; then
            echo "‚ùå User repos response is not valid JSON array:"
            echo "$REPOS_JSON"
            exit 1
          fi
          REPOS=$(echo "$REPOS_JSON" | jq -r '.[] | select(.full_name != null) | .full_name')

          echo "üì• Fetching organization repositories..."
          ORG_REPOS=""
          ORGS_JSON=$(curl -s -H "$AUTH_HEADER" https://api.github.com/user/orgs)
          if ! echo "$ORGS_JSON" | jq -e 'type == "array"' > /dev/null; then
            echo "‚ùå Org list response is invalid:"
            echo "$ORGS_JSON"
            exit 1
          fi
          ORG_NAMES=$(echo "$ORGS_JSON" | jq -r '.[].login')
          for ORG in $ORG_NAMES; do
            ORG_REPO_JSON=$(curl -s -H "$AUTH_HEADER" https://api.github.com/orgs/$ORG/repos?per_page=100)
            if echo "$ORG_REPO_JSON" | jq -e 'type == "array"' > /dev/null; then
              ORG_REPOS+=$(echo "$ORG_REPO_JSON" | jq -r '.[] | select(.full_name != null) | .full_name')$'\n'
            else
              echo "‚ö†Ô∏è Skipping org '$ORG' due to invalid repo response"
            fi
          done

          echo "üîÄ Merging all repositories..."
          ALL_REPOS=$(echo -e "$REPOS\n$ORG_REPOS" | sort | uniq)

          echo "üîé Looking for commits made today..."
          COMMITTED_REPOS=""
          for REPO in $ALL_REPOS; do
            COMMITS_JSON=$(curl -s -H "$AUTH_HEADER" \
              "https://api.github.com/repos/$REPO/commits?author=4troDev&since=$(date -u +%Y-%m-%dT00:00:00Z)")
            if echo "$COMMITS_JSON" | jq -e 'type == "array"' > /dev/null; then
              HAS_COMMITS=$(echo "$COMMITS_JSON" | jq -r '.[].sha' | head -n 1)
              if [ -n "$HAS_COMMITS" ]; then
                COMMITTED_REPOS+="- [$(basename $REPO)](https://github.com/$REPO)"$'\n'
              fi
            else
              echo "‚ö†Ô∏è Skipping $REPO ‚Äî invalid commits response"
            fi
          done

          if [ -z "$COMMITTED_REPOS" ]; then
            COMMITTED_REPOS="*No activity today.*"
          fi

          echo "üìù Updating README.md..."
          awk -v r="$COMMITTED_REPOS" '
            /<!-- CURRENTLY-WORKING-ON:START -->/ { print; print r; skip=1; next }
            /<!-- CURRENTLY-WORKING-ON:END -->/ { skip=0 }
            skip==0 { print }
          ' README.md > README.tmp && mv README.tmp README.md

      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          branch: main
          message: "üîÑ Update committed repos in README"
